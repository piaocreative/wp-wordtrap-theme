{"version":3,"sources":["..\\src\\sass\\theme\\vendor\\bootstrap\\_reboot.scss","css\\editor.css","..\\src\\sass\\theme\\vendor\\bootstrap\\vendor\\_rfs.scss","..\\src\\sass\\theme\\vendor\\bootstrap\\mixins\\_border-radius.scss","..\\src\\sass\\theme\\vendor\\bootstrap\\_root.scss","..\\src\\sass\\theme\\vendor\\bootstrap\\_tables.scss","..\\src\\sass\\theme\\vendor\\bootstrap\\mixins\\_table-variants.scss","..\\src\\sass\\theme\\vendor\\bootstrap\\mixins\\_breakpoints.scss","..\\src\\sass\\theme\\vendor\\bootstrap\\_images.scss","..\\src\\sass\\theme\\vendor\\bootstrap\\mixins\\_image.scss","..\\src\\sass\\theme\\vendor\\bootstrap\\_type.scss","..\\src\\sass\\theme\\vendor\\bootstrap\\mixins\\_lists.scss","..\\src\\sass\\theme\\_colors.scss"],"names":[],"mappings":"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","sourcesContent":["// stylelint-disable declaration-no-important, selector-no-qualifying-type, property-no-vendor-prefix\n\n\n// Reboot\n//\n// Normalization of HTML elements, manually forked from Normalize.css to remove\n// styles targeting irrelevant browsers while applying new styles.\n//\n// Normalize is licensed MIT. https://github.com/necolas/normalize.css\n\n\n// Document\n//\n// Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n\n// Root\n//\n// Ability to the value of the root font sizes, affecting the value of `rem`.\n// null by default, thus nothing is generated.\n\n:root {\n  @if $font-size-root != null {\n    font-size: var(--#{$variable-prefix}root-font-size);\n  }\n\n  @if $enable-smooth-scroll {\n    @media (prefers-reduced-motion: no-preference) {\n      scroll-behavior: smooth;\n    }\n  }\n}\n\n\n// Body\n//\n// 1. Remove the margin in all browsers.\n// 2. As a best practice, apply a default `background-color`.\n// 3. Prevent adjustments of font size after orientation changes in iOS.\n// 4. Change the default tap highlight to be completely transparent in iOS.\n\n// scss-docs-start reboot-body-rules\nbody {\n  margin: 0; // 1\n  font-family: var(--#{$variable-prefix}body-font-family);\n  @include font-size(var(--#{$variable-prefix}body-font-size));\n  font-weight: var(--#{$variable-prefix}body-font-weight);\n  line-height: var(--#{$variable-prefix}body-line-height);\n  color: var(--#{$variable-prefix}body-color);\n  text-align: var(--#{$variable-prefix}body-text-align);\n  background-color: var(--#{$variable-prefix}body-bg); // 2\n  -webkit-text-size-adjust: 100%; // 3\n  -webkit-tap-highlight-color: rgba($black, 0); // 4\n}\n// scss-docs-end reboot-body-rules\n\n\n// Content grouping\n//\n// 1. Reset Firefox's gray color\n// 2. Set correct height and prevent the `size` attribute to make the `hr` look like an input field\n\nhr {\n  margin: $hr-margin-y 0;\n  color: $hr-color; // 1\n  background-color: currentColor;\n  border: 0;\n  opacity: $hr-opacity;\n}\n\nhr:not([size]) {\n  height: $hr-height; // 2\n}\n\n\n// Typography\n//\n// 1. Remove top margins from headings\n//    By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top\n//    margin for easier control within type scales as it avoids margin collapsing.\n\n%heading {\n  margin-top: 0; // 1\n  margin-bottom: $headings-margin-bottom;\n  font-family: $headings-font-family;\n  font-style: $headings-font-style;\n  font-weight: $headings-font-weight;\n  line-height: $headings-line-height;\n  color: $headings-color;\n}\n\nh1 {\n  @extend %heading;\n  @include font-size($h1-font-size);\n}\n\nh2 {\n  @extend %heading;\n  @include font-size($h2-font-size);\n}\n\nh3 {\n  @extend %heading;\n  @include font-size($h3-font-size);\n}\n\nh4 {\n  @extend %heading;\n  @include font-size($h4-font-size);\n}\n\nh5 {\n  @extend %heading;\n  @include font-size($h5-font-size);\n}\n\nh6 {\n  @extend %heading;\n  @include font-size($h6-font-size);\n}\n\n\n// Reset margins on paragraphs\n//\n// Similarly, the top margin on `<p>`s get reset. However, we also reset the\n// bottom margin to use `rem` units instead of `em`.\n\np {\n  margin-top: 0;\n  margin-bottom: $paragraph-margin-bottom;\n}\n\n\n// Abbreviations\n//\n// 1. Duplicate behavior to the data-bs-* attribute for our tooltip plugin\n// 2. Add the correct text decoration in Chrome, Edge, Opera, and Safari.\n// 3. Add explicit cursor to indicate changed behavior.\n// 4. Prevent the text-decoration to be skipped.\n\nabbr[title],\nabbr[data-bs-original-title] { // 1\n  text-decoration: underline dotted; // 2\n  cursor: help; // 3\n  text-decoration-skip-ink: none; // 4\n}\n\n\n// Address\n\naddress {\n  margin-bottom: 1rem;\n  font-style: normal;\n  line-height: inherit;\n}\n\n\n// Lists\n\nol,\nul {\n  padding-left: 2rem;\n}\n\nol,\nul,\ndl {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\nol ol,\nul ul,\nol ul,\nul ol {\n  margin-bottom: 0;\n}\n\ndt {\n  font-weight: $dt-font-weight;\n}\n\n// 1. Undo browser default\n\ndd {\n  margin-bottom: .5rem;\n  margin-left: 0; // 1\n}\n\n\n// Blockquote\n\nblockquote {\n  margin: 0 0 1rem;\n}\n\n\n// Strong\n//\n// Add the correct font weight in Chrome, Edge, and Safari\n\nb,\nstrong {\n  font-weight: $font-weight-bolder;\n}\n\n\n// Small\n//\n// Add the correct font size in all browsers\n\nsmall {\n  @include font-size($small-font-size);\n}\n\n\n// Mark\n\nmark {\n  padding: $mark-padding;\n  background-color: $mark-bg;\n}\n\n\n// Sub and Sup\n//\n// Prevent `sub` and `sup` elements from affecting the line height in\n// all browsers.\n\nsub,\nsup {\n  position: relative;\n  @include font-size($sub-sup-font-size);\n  line-height: 0;\n  vertical-align: baseline;\n}\n\nsub { bottom: -.25em; }\nsup { top: -.5em; }\n\n\n// Links\n\na {\n  color: $link-color;\n  text-decoration: $link-decoration;\n\n  &:hover {\n    color: $link-hover-color;\n    text-decoration: $link-hover-decoration;\n  }\n}\n\n// And undo these styles for placeholder links/named anchors (without href).\n// It would be more straightforward to just use a[href] in previous block, but that\n// causes specificity issues in many other styles that are too complex to fix.\n// See https://github.com/twbs/bootstrap/issues/19402\n\na:not([href]):not([class]) {\n  &,\n  &:hover {\n    color: inherit;\n    text-decoration: none;\n  }\n}\n\n\n// Code\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: $font-family-code;\n  @include font-size(1em); // Correct the odd `em` font sizing in all browsers.\n  direction: ltr #{\"/* rtl:ignore */\"};\n  unicode-bidi: bidi-override;\n}\n\n// 1. Remove browser default top margin\n// 2. Reset browser default of `1em` to use `rem`s\n// 3. Don't allow content to break outside\n\npre {\n  display: block;\n  margin-top: 0; // 1\n  margin-bottom: 1rem; // 2\n  overflow: auto; // 3\n  @include font-size($code-font-size);\n  color: $pre-color;\n\n  // Account for some code outputs that place code tags in pre tags\n  code {\n    @include font-size(inherit);\n    color: inherit;\n    word-break: normal;\n  }\n}\n\ncode {\n  @include font-size($code-font-size);\n  color: $code-color;\n  word-wrap: break-word;\n\n  // Streamline the style when inside anchors to avoid broken underline and more\n  a > & {\n    color: inherit;\n  }\n}\n\nkbd {\n  padding: $kbd-padding-y $kbd-padding-x;\n  @include font-size($kbd-font-size);\n  color: $kbd-color;\n  background-color: $kbd-bg;\n  @include border-radius($border-radius-sm);\n\n  kbd {\n    padding: 0;\n    @include font-size(1em);\n    font-weight: $nested-kbd-font-weight;\n  }\n}\n\n\n// Figures\n//\n// Apply a consistent margin strategy (matches our type styles).\n\nfigure {\n  margin: 0 0 1rem;\n}\n\n\n// Images and content\n\nimg,\nsvg {\n  vertical-align: middle;\n}\n\n\n// Tables\n//\n// Prevent double borders\n\ntable {\n  caption-side: bottom;\n  border-collapse: collapse;\n}\n\ncaption {\n  padding-top: $table-cell-padding-y;\n  padding-bottom: $table-cell-padding-y;\n  color: $table-caption-color;\n  text-align: left;\n}\n\n// 1. Removes font-weight bold by inheriting\n// 2. Matches default `<td>` alignment by inheriting `text-align`.\n// 3. Fix alignment for Safari\n\nth {\n  font-weight: $table-th-font-weight; // 1\n  text-align: inherit; // 2\n  text-align: -webkit-match-parent; // 3\n}\n\nthead,\ntbody,\ntfoot,\ntr,\ntd,\nth {\n  border-color: inherit;\n  border-style: solid;\n  border-width: 0;\n}\n\n\n// Forms\n//\n// 1. Allow labels to use `margin` for spacing.\n\nlabel {\n  display: inline-block; // 1\n}\n\n// Remove the default `border-radius` that macOS Chrome adds.\n// See https://github.com/twbs/bootstrap/issues/24093\n\nbutton {\n  // stylelint-disable-next-line property-disallowed-list\n  border-radius: 0;\n}\n\n// Explicitly remove focus outline in Chromium when it shouldn't be\n// visible (e.g. as result of mouse click or touch tap). It already\n// should be doing this automatically, but seems to currently be\n// confused and applies its very visible two-tone outline anyway.\n\nbutton:focus:not(:focus-visible) {\n  outline: 0;\n}\n\n// 1. Remove the margin in Firefox and Safari\n\ninput,\nbutton,\nselect,\noptgroup,\ntextarea {\n  margin: 0; // 1\n  font-family: inherit;\n  @include font-size(inherit);\n  line-height: inherit;\n}\n\n// Remove the inheritance of text transform in Firefox\nbutton,\nselect {\n  text-transform: none;\n}\n// Set the cursor for non-`<button>` buttons\n//\n// Details at https://github.com/twbs/bootstrap/pull/30562\n[role=\"button\"] {\n  cursor: pointer;\n}\n\nselect {\n  // Remove the inheritance of word-wrap in Safari.\n  // See https://github.com/twbs/bootstrap/issues/24990\n  word-wrap: normal;\n\n  // Undo the opacity change from Chrome\n  &:disabled {\n    opacity: 1;\n  }\n}\n\n// Remove the dropdown arrow in Chrome from inputs built with datalists.\n// See https://stackoverflow.com/a/54997118\n\n[list]::-webkit-calendar-picker-indicator {\n  display: none;\n}\n\n// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n//    controls in Android 4.\n// 2. Correct the inability to style clickable types in iOS and Safari.\n// 3. Opinionated: add \"hand\" cursor to non-disabled button elements.\n\nbutton,\n[type=\"button\"], // 1\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button; // 2\n\n  @if $enable-button-pointers {\n    &:not(:disabled) {\n      cursor: pointer; // 3\n    }\n  }\n}\n\n// Remove inner border and padding from Firefox, but don't restore the outline like Normalize.\n\n::-moz-focus-inner {\n  padding: 0;\n  border-style: none;\n}\n\n// 1. Textareas should really only resize vertically so they don't break their (horizontal) containers.\n\ntextarea {\n  resize: vertical; // 1\n}\n\n// 1. Browsers set a default `min-width: min-content;` on fieldsets,\n//    unlike e.g. `<div>`s, which have `min-width: 0;` by default.\n//    So we reset that to ensure fieldsets behave more like a standard block element.\n//    See https://github.com/twbs/bootstrap/issues/12359\n//    and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements\n// 2. Reset the default outline behavior of fieldsets so they don't affect page layout.\n\nfieldset {\n  min-width: 0; // 1\n  padding: 0; // 2\n  margin: 0; // 2\n  border: 0; // 2\n}\n\n// 1. By using `float: left`, the legend will behave like a block element.\n//    This way the border of a fieldset wraps around the legend if present.\n// 2. Fix wrapping bug.\n//    See https://github.com/twbs/bootstrap/issues/29712\n\nlegend {\n  float: left; // 1\n  width: 100%;\n  padding: 0;\n  margin-bottom: $legend-margin-bottom;\n  @include font-size($legend-font-size);\n  font-weight: $legend-font-weight;\n  line-height: inherit;\n\n  + * {\n    clear: left; // 2\n  }\n}\n\n// Fix height of inputs with a type of datetime-local, date, month, week, or time\n// See https://github.com/twbs/bootstrap/issues/18842\n\n::-webkit-datetime-edit-fields-wrapper,\n::-webkit-datetime-edit-text,\n::-webkit-datetime-edit-minute,\n::-webkit-datetime-edit-hour-field,\n::-webkit-datetime-edit-day-field,\n::-webkit-datetime-edit-month-field,\n::-webkit-datetime-edit-year-field {\n  padding: 0;\n}\n\n::-webkit-inner-spin-button {\n  height: auto;\n}\n\n// 1. Correct the outline style in Safari.\n// 2. This overrides the extra rounded corners on search inputs in iOS so that our\n//    `.form-control` class can properly style them. Note that this cannot simply\n//    be added to `.form-control` as it's not specific enough. For details, see\n//    https://github.com/twbs/bootstrap/issues/11586.\n\n[type=\"search\"] {\n  outline-offset: -2px; // 1\n  -webkit-appearance: textfield; // 2\n}\n\n// 1. A few input types should stay LTR\n// See https://rtlstyling.com/posts/rtl-styling#form-inputs\n// 2. RTL only output\n// See https://rtlcss.com/learn/usage-guide/control-directives/#raw\n\n/* rtl:raw:\n[type=\"tel\"],\n[type=\"url\"],\n[type=\"email\"],\n[type=\"number\"] {\n  direction: ltr;\n}\n*/\n\n// Remove the inner padding in Chrome and Safari on macOS.\n\n::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n// Remove padding around color pickers in webkit browsers\n\n::-webkit-color-swatch-wrapper {\n  padding: 0;\n}\n\n\n// Inherit font family and line height for file input buttons\n\n::file-selector-button {\n  font: inherit;\n}\n\n// 1. Change font properties to `inherit`\n// 2. Correct the inability to style clickable types in iOS and Safari.\n\n::-webkit-file-upload-button {\n  font: inherit; // 1\n  -webkit-appearance: button; // 2\n}\n\n// Correct element displays\n\noutput {\n  display: inline-block;\n}\n\n// Remove border from iframe\n\niframe {\n  border: 0;\n}\n\n// Summary\n//\n// 1. Add the correct display in all browsers\n\nsummary {\n  display: list-item; // 1\n  cursor: pointer;\n}\n\n\n// Progress\n//\n// Add the correct vertical alignment in Chrome, Firefox, and Opera.\n\nprogress {\n  vertical-align: baseline;\n}\n\n\n// Hidden attribute\n//\n// Always hide an element with the `hidden` HTML attribute.\n\n[hidden] {\n  display: none !important;\n}\n","@charset \"UTF-8\";\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: border-box;\r\n}\r\n\r\n@media (prefers-reduced-motion: no-preference) {\r\n  :root {\r\n    scroll-behavior: smooth;\r\n  }\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: var(--bs-body-font-family);\r\n  font-size: var(--bs-body-font-size);\r\n  font-weight: var(--bs-body-font-weight);\r\n  line-height: var(--bs-body-line-height);\r\n  color: var(--bs-body-color);\r\n  text-align: var(--bs-body-text-align);\r\n  background-color: var(--bs-body-bg);\r\n  -webkit-text-size-adjust: 100%;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n}\r\n\r\nhr {\r\n  margin: 1rem 0;\r\n  color: inherit;\r\n  background-color: currentColor;\r\n  border: 0;\r\n  opacity: 0.25;\r\n}\r\n\r\nhr:not([size]) {\r\n  height: 1px;\r\n}\r\n\r\nh6, .h6, h5, .h5, h4, .h4, h3, .h3, h2, .h2, h1, .h1 {\r\n  margin-top: 0;\r\n  margin-bottom: 0.5rem;\r\n  font-weight: 500;\r\n  line-height: 1.2;\r\n}\r\n\r\nh1, .h1 {\r\n  font-size: calc(1.375rem + 1.5vw);\r\n}\r\n@media (min-width: 1200px) {\r\n  h1, .h1 {\r\n    font-size: 2.5rem;\r\n  }\r\n}\r\n\r\nh2, .h2 {\r\n  font-size: calc(1.325rem + 0.9vw);\r\n}\r\n@media (min-width: 1200px) {\r\n  h2, .h2 {\r\n    font-size: 2rem;\r\n  }\r\n}\r\n\r\nh3, .h3 {\r\n  font-size: calc(1.3rem + 0.6vw);\r\n}\r\n@media (min-width: 1200px) {\r\n  h3, .h3 {\r\n    font-size: 1.75rem;\r\n  }\r\n}\r\n\r\nh4, .h4 {\r\n  font-size: calc(1.275rem + 0.3vw);\r\n}\r\n@media (min-width: 1200px) {\r\n  h4, .h4 {\r\n    font-size: 1.5rem;\r\n  }\r\n}\r\n\r\nh5, .h5 {\r\n  font-size: 1.25rem;\r\n}\r\n\r\nh6, .h6 {\r\n  font-size: 1rem;\r\n}\r\n\r\np {\r\n  margin-top: 0;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\nabbr[title],\r\nabbr[data-bs-original-title] {\r\n  -webkit-text-decoration: underline dotted;\r\n  text-decoration: underline dotted;\r\n  cursor: help;\r\n  -webkit-text-decoration-skip-ink: none;\r\n  text-decoration-skip-ink: none;\r\n}\r\n\r\naddress {\r\n  margin-bottom: 1rem;\r\n  font-style: normal;\r\n  line-height: inherit;\r\n}\r\n\r\nol,\r\nul {\r\n  padding-left: 2rem;\r\n}\r\n\r\nol,\r\nul,\r\ndl {\r\n  margin-top: 0;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\nol ol,\r\nul ul,\r\nol ul,\r\nul ol {\r\n  margin-bottom: 0;\r\n}\r\n\r\ndt {\r\n  font-weight: 700;\r\n}\r\n\r\ndd {\r\n  margin-bottom: 0.5rem;\r\n  margin-left: 0;\r\n}\r\n\r\nblockquote {\r\n  margin: 0 0 1rem;\r\n}\r\n\r\nb,\r\nstrong {\r\n  font-weight: bolder;\r\n}\r\n\r\nsmall, .small {\r\n  font-size: 0.875em;\r\n}\r\n\r\nmark, .mark {\r\n  padding: 0.2em;\r\n  background-color: #fcf8e3;\r\n}\r\n\r\nsub,\r\nsup {\r\n  position: relative;\r\n  font-size: 0.75em;\r\n  line-height: 0;\r\n  vertical-align: baseline;\r\n}\r\n\r\nsub {\r\n  bottom: -0.25em;\r\n}\r\n\r\nsup {\r\n  top: -0.5em;\r\n}\r\n\r\na {\r\n  color: #0d6efd;\r\n  text-decoration: underline;\r\n}\r\na:hover {\r\n  color: #0a58ca;\r\n}\r\n\r\na:not([href]):not([class]), a:not([href]):not([class]):hover {\r\n  color: inherit;\r\n  text-decoration: none;\r\n}\r\n\r\npre,\r\ncode,\r\nkbd,\r\nsamp {\r\n  font-family: var(--bs-font-monospace);\r\n  font-size: 1em;\r\n  direction: ltr /* rtl:ignore */;\r\n  unicode-bidi: bidi-override;\r\n}\r\n\r\npre {\r\n  display: block;\r\n  margin-top: 0;\r\n  margin-bottom: 1rem;\r\n  overflow: auto;\r\n  font-size: 0.875em;\r\n}\r\npre code {\r\n  font-size: inherit;\r\n  color: inherit;\r\n  word-break: normal;\r\n}\r\n\r\ncode {\r\n  font-size: 0.875em;\r\n  color: #d63384;\r\n  word-wrap: break-word;\r\n}\r\na > code {\r\n  color: inherit;\r\n}\r\n\r\nkbd {\r\n  padding: 0.2rem 0.4rem;\r\n  font-size: 0.875em;\r\n  color: #fff;\r\n  background-color: #212529;\r\n  border-radius: 0.2rem;\r\n}\r\nkbd kbd {\r\n  padding: 0;\r\n  font-size: 1em;\r\n  font-weight: 700;\r\n}\r\n\r\nfigure {\r\n  margin: 0 0 1rem;\r\n}\r\n\r\nimg,\r\nsvg {\r\n  vertical-align: middle;\r\n}\r\n\r\ntable {\r\n  caption-side: bottom;\r\n  border-collapse: collapse;\r\n}\r\n\r\ncaption {\r\n  padding-top: 0.5rem;\r\n  padding-bottom: 0.5rem;\r\n  color: #6c757d;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  text-align: inherit;\r\n  text-align: -webkit-match-parent;\r\n}\r\n\r\nthead,\r\ntbody,\r\ntfoot,\r\ntr,\r\ntd,\r\nth {\r\n  border-color: inherit;\r\n  border-style: solid;\r\n  border-width: 0;\r\n}\r\n\r\nlabel {\r\n  display: inline-block;\r\n}\r\n\r\nbutton {\r\n  border-radius: 0;\r\n}\r\n\r\nbutton:focus:not(:focus-visible) {\r\n  outline: 0;\r\n}\r\n\r\ninput,\r\nbutton,\r\nselect,\r\noptgroup,\r\ntextarea {\r\n  margin: 0;\r\n  font-family: inherit;\r\n  font-size: inherit;\r\n  line-height: inherit;\r\n}\r\n\r\nbutton,\r\nselect {\r\n  text-transform: none;\r\n}\r\n\r\n[role=button] {\r\n  cursor: pointer;\r\n}\r\n\r\nselect {\r\n  word-wrap: normal;\r\n}\r\nselect:disabled {\r\n  opacity: 1;\r\n}\r\n\r\n[list]::-webkit-calendar-picker-indicator {\r\n  display: none;\r\n}\r\n\r\nbutton,\r\n[type=button],\r\n[type=reset],\r\n[type=submit] {\r\n  -webkit-appearance: button;\r\n}\r\nbutton:not(:disabled),\r\n[type=button]:not(:disabled),\r\n[type=reset]:not(:disabled),\r\n[type=submit]:not(:disabled) {\r\n  cursor: pointer;\r\n}\r\n\r\n::-moz-focus-inner {\r\n  padding: 0;\r\n  border-style: none;\r\n}\r\n\r\ntextarea {\r\n  resize: vertical;\r\n}\r\n\r\nfieldset {\r\n  min-width: 0;\r\n  padding: 0;\r\n  margin: 0;\r\n  border: 0;\r\n}\r\n\r\nlegend {\r\n  float: left;\r\n  width: 100%;\r\n  padding: 0;\r\n  margin-bottom: 0.5rem;\r\n  font-size: calc(1.275rem + 0.3vw);\r\n  line-height: inherit;\r\n}\r\n@media (min-width: 1200px) {\r\n  legend {\r\n    font-size: 1.5rem;\r\n  }\r\n}\r\nlegend + * {\r\n  clear: left;\r\n}\r\n\r\n::-webkit-datetime-edit-fields-wrapper,\r\n::-webkit-datetime-edit-text,\r\n::-webkit-datetime-edit-minute,\r\n::-webkit-datetime-edit-hour-field,\r\n::-webkit-datetime-edit-day-field,\r\n::-webkit-datetime-edit-month-field,\r\n::-webkit-datetime-edit-year-field {\r\n  padding: 0;\r\n}\r\n\r\n::-webkit-inner-spin-button {\r\n  height: auto;\r\n}\r\n\r\n[type=search] {\r\n  outline-offset: -2px;\r\n  -webkit-appearance: textfield;\r\n}\r\n\r\n/* rtl:raw:\r\n[type=\"tel\"],\r\n[type=\"url\"],\r\n[type=\"email\"],\r\n[type=\"number\"] {\r\n  direction: ltr;\r\n}\r\n*/\r\n::-webkit-search-decoration {\r\n  -webkit-appearance: none;\r\n}\r\n\r\n::-webkit-color-swatch-wrapper {\r\n  padding: 0;\r\n}\r\n\r\n::-webkit-file-upload-button {\r\n  font: inherit;\r\n}\r\n\r\n::file-selector-button {\r\n  font: inherit;\r\n}\r\n\r\n::-webkit-file-upload-button {\r\n  font: inherit;\r\n  -webkit-appearance: button;\r\n}\r\n\r\noutput {\r\n  display: inline-block;\r\n}\r\n\r\niframe {\r\n  border: 0;\r\n}\r\n\r\nsummary {\r\n  display: list-item;\r\n  cursor: pointer;\r\n}\r\n\r\nprogress {\r\n  vertical-align: baseline;\r\n}\r\n\r\n[hidden] {\r\n  display: none !important;\r\n}\r\n\r\n:root {\r\n  --bs-blue: #0d6efd;\r\n  --bs-indigo: #6610f2;\r\n  --bs-purple: #6f42c1;\r\n  --bs-pink: #d63384;\r\n  --bs-red: #dc3545;\r\n  --bs-orange: #fd7e14;\r\n  --bs-yellow: #ffc107;\r\n  --bs-green: #198754;\r\n  --bs-teal: #20c997;\r\n  --bs-cyan: #0dcaf0;\r\n  --bs-white: #fff;\r\n  --bs-gray: #6c757d;\r\n  --bs-gray-dark: #343a40;\r\n  --bs-gray-100: #f8f9fa;\r\n  --bs-gray-200: #e9ecef;\r\n  --bs-gray-300: #dee2e6;\r\n  --bs-gray-400: #ced4da;\r\n  --bs-gray-500: #adb5bd;\r\n  --bs-gray-600: #6c757d;\r\n  --bs-gray-700: #495057;\r\n  --bs-gray-800: #343a40;\r\n  --bs-gray-900: #212529;\r\n  --bs-primary: #0d6efd;\r\n  --bs-secondary: #6c757d;\r\n  --bs-success: #198754;\r\n  --bs-info: #0dcaf0;\r\n  --bs-warning: #ffc107;\r\n  --bs-danger: #dc3545;\r\n  --bs-light: #f8f9fa;\r\n  --bs-dark: #212529;\r\n  --bs-primary-rgb: 13, 110, 253;\r\n  --bs-secondary-rgb: 108, 117, 125;\r\n  --bs-success-rgb: 25, 135, 84;\r\n  --bs-info-rgb: 13, 202, 240;\r\n  --bs-warning-rgb: 255, 193, 7;\r\n  --bs-danger-rgb: 220, 53, 69;\r\n  --bs-light-rgb: 248, 249, 250;\r\n  --bs-dark-rgb: 33, 37, 41;\r\n  --bs-white-rgb: 255, 255, 255;\r\n  --bs-black-rgb: 0, 0, 0;\r\n  --bs-body-color-rgb: 33, 37, 41;\r\n  --bs-body-bg-rgb: 255, 255, 255;\r\n  --bs-font-sans-serif: system-ui, -apple-system, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", \"Liberation Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\r\n  --bs-font-monospace: SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace;\r\n  --bs-gradient: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));\r\n  --bs-body-font-family: var(--bs-font-sans-serif);\r\n  --bs-body-font-size: 1rem;\r\n  --bs-body-font-weight: 400;\r\n  --bs-body-line-height: 1.5;\r\n  --bs-body-color: #212529;\r\n  --bs-body-bg: #fff;\r\n}\r\n\r\n.table {\r\n  --bs-table-bg: transparent;\r\n  --bs-table-accent-bg: transparent;\r\n  --bs-table-striped-color: #212529;\r\n  --bs-table-striped-bg: rgba(0, 0, 0, 0.05);\r\n  --bs-table-active-color: #212529;\r\n  --bs-table-active-bg: rgba(0, 0, 0, 0.1);\r\n  --bs-table-hover-color: #212529;\r\n  --bs-table-hover-bg: rgba(0, 0, 0, 0.075);\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  color: #212529;\r\n  vertical-align: top;\r\n  border-color: #dee2e6;\r\n}\r\n.table > :not(caption) > * > * {\r\n  padding: 0.5rem 0.5rem;\r\n  background-color: var(--bs-table-bg);\r\n  border-bottom-width: 1px;\r\n  box-shadow: inset 0 0 0 9999px var(--bs-table-accent-bg);\r\n}\r\n.table > tbody {\r\n  vertical-align: inherit;\r\n}\r\n.table > thead {\r\n  vertical-align: bottom;\r\n}\r\n.table > :not(:first-child) {\r\n  border-top: 2px solid currentColor;\r\n}\r\n\r\n.caption-top {\r\n  caption-side: top;\r\n}\r\n\r\n.table-sm > :not(caption) > * > * {\r\n  padding: 0.25rem 0.25rem;\r\n}\r\n\r\n.table-bordered > :not(caption) > * {\r\n  border-width: 1px 0;\r\n}\r\n.table-bordered > :not(caption) > * > * {\r\n  border-width: 0 1px;\r\n}\r\n\r\n.table-borderless > :not(caption) > * > * {\r\n  border-bottom-width: 0;\r\n}\r\n.table-borderless > :not(:first-child) {\r\n  border-top-width: 0;\r\n}\r\n\r\n.table-striped > tbody > tr:nth-of-type(odd) > * {\r\n  --bs-table-accent-bg: var(--bs-table-striped-bg);\r\n  color: var(--bs-table-striped-color);\r\n}\r\n\r\n.table-active {\r\n  --bs-table-accent-bg: var(--bs-table-active-bg);\r\n  color: var(--bs-table-active-color);\r\n}\r\n\r\n.table-hover > tbody > tr:hover > * {\r\n  --bs-table-accent-bg: var(--bs-table-hover-bg);\r\n  color: var(--bs-table-hover-color);\r\n}\r\n\r\n.table-primary {\r\n  --bs-table-bg: #cfe2ff;\r\n  --bs-table-striped-bg: #c5d7f2;\r\n  --bs-table-striped-color: #000;\r\n  --bs-table-active-bg: #bacbe6;\r\n  --bs-table-active-color: #000;\r\n  --bs-table-hover-bg: #bfd1ec;\r\n  --bs-table-hover-color: #000;\r\n  color: #000;\r\n  border-color: #bacbe6;\r\n}\r\n\r\n.table-secondary {\r\n  --bs-table-bg: #e2e3e5;\r\n  --bs-table-striped-bg: #d7d8da;\r\n  --bs-table-striped-color: #000;\r\n  --bs-table-active-bg: #cbccce;\r\n  --bs-table-active-color: #000;\r\n  --bs-table-hover-bg: #d1d2d4;\r\n  --bs-table-hover-color: #000;\r\n  color: #000;\r\n  border-color: #cbccce;\r\n}\r\n\r\n.table-success {\r\n  --bs-table-bg: #d1e7dd;\r\n  --bs-table-striped-bg: #c7dbd2;\r\n  --bs-table-striped-color: #000;\r\n  --bs-table-active-bg: #bcd0c7;\r\n  --bs-table-active-color: #000;\r\n  --bs-table-hover-bg: #c1d6cc;\r\n  --bs-table-hover-color: #000;\r\n  color: #000;\r\n  border-color: #bcd0c7;\r\n}\r\n\r\n.table-info {\r\n  --bs-table-bg: #cff4fc;\r\n  --bs-table-striped-bg: #c5e8ef;\r\n  --bs-table-striped-color: #000;\r\n  --bs-table-active-bg: #badce3;\r\n  --bs-table-active-color: #000;\r\n  --bs-table-hover-bg: #bfe2e9;\r\n  --bs-table-hover-color: #000;\r\n  color: #000;\r\n  border-color: #badce3;\r\n}\r\n\r\n.table-warning {\r\n  --bs-table-bg: #fff3cd;\r\n  --bs-table-striped-bg: #f2e7c3;\r\n  --bs-table-striped-color: #000;\r\n  --bs-table-active-bg: #e6dbb9;\r\n  --bs-table-active-color: #000;\r\n  --bs-table-hover-bg: #ece1be;\r\n  --bs-table-hover-color: #000;\r\n  color: #000;\r\n  border-color: #e6dbb9;\r\n}\r\n\r\n.table-danger {\r\n  --bs-table-bg: #f8d7da;\r\n  --bs-table-striped-bg: #eccccf;\r\n  --bs-table-striped-color: #000;\r\n  --bs-table-active-bg: #dfc2c4;\r\n  --bs-table-active-color: #000;\r\n  --bs-table-hover-bg: #e5c7ca;\r\n  --bs-table-hover-color: #000;\r\n  color: #000;\r\n  border-color: #dfc2c4;\r\n}\r\n\r\n.table-light {\r\n  --bs-table-bg: #f8f9fa;\r\n  --bs-table-striped-bg: #ecedee;\r\n  --bs-table-striped-color: #000;\r\n  --bs-table-active-bg: #dfe0e1;\r\n  --bs-table-active-color: #000;\r\n  --bs-table-hover-bg: #e5e6e7;\r\n  --bs-table-hover-color: #000;\r\n  color: #000;\r\n  border-color: #dfe0e1;\r\n}\r\n\r\n.table-dark {\r\n  --bs-table-bg: #212529;\r\n  --bs-table-striped-bg: #2c3034;\r\n  --bs-table-striped-color: #fff;\r\n  --bs-table-active-bg: #373b3e;\r\n  --bs-table-active-color: #fff;\r\n  --bs-table-hover-bg: #323539;\r\n  --bs-table-hover-color: #fff;\r\n  color: #fff;\r\n  border-color: #373b3e;\r\n}\r\n\r\n.table-responsive {\r\n  overflow-x: auto;\r\n  -webkit-overflow-scrolling: touch;\r\n}\r\n\r\n@media (max-width: 575.98px) {\r\n  .table-responsive-sm {\r\n    overflow-x: auto;\r\n    -webkit-overflow-scrolling: touch;\r\n  }\r\n}\r\n@media (max-width: 767.98px) {\r\n  .table-responsive-md {\r\n    overflow-x: auto;\r\n    -webkit-overflow-scrolling: touch;\r\n  }\r\n}\r\n@media (max-width: 991.98px) {\r\n  .table-responsive-lg {\r\n    overflow-x: auto;\r\n    -webkit-overflow-scrolling: touch;\r\n  }\r\n}\r\n@media (max-width: 1199.98px) {\r\n  .table-responsive-xl {\r\n    overflow-x: auto;\r\n    -webkit-overflow-scrolling: touch;\r\n  }\r\n}\r\n@media (max-width: 1399.98px) {\r\n  .table-responsive-xxl {\r\n    overflow-x: auto;\r\n    -webkit-overflow-scrolling: touch;\r\n  }\r\n}\r\n.img-fluid {\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.img-thumbnail {\r\n  padding: 0.25rem;\r\n  background-color: #fff;\r\n  border: 1px solid #dee2e6;\r\n  border-radius: 0.25rem;\r\n  max-width: 100%;\r\n  height: auto;\r\n}\r\n\r\n.figure {\r\n  display: inline-block;\r\n}\r\n\r\n.figure-img {\r\n  margin-bottom: 0.5rem;\r\n  line-height: 1;\r\n}\r\n\r\n.figure-caption {\r\n  font-size: 0.875em;\r\n  color: #6c757d;\r\n}\r\n\r\n.lead {\r\n  font-size: 1.25rem;\r\n  font-weight: 300;\r\n}\r\n\r\n.display-1 {\r\n  font-size: calc(1.625rem + 4.5vw);\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n}\r\n@media (min-width: 1200px) {\r\n  .display-1 {\r\n    font-size: 5rem;\r\n  }\r\n}\r\n\r\n.display-2 {\r\n  font-size: calc(1.575rem + 3.9vw);\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n}\r\n@media (min-width: 1200px) {\r\n  .display-2 {\r\n    font-size: 4.5rem;\r\n  }\r\n}\r\n\r\n.display-3 {\r\n  font-size: calc(1.525rem + 3.3vw);\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n}\r\n@media (min-width: 1200px) {\r\n  .display-3 {\r\n    font-size: 4rem;\r\n  }\r\n}\r\n\r\n.display-4 {\r\n  font-size: calc(1.475rem + 2.7vw);\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n}\r\n@media (min-width: 1200px) {\r\n  .display-4 {\r\n    font-size: 3.5rem;\r\n  }\r\n}\r\n\r\n.display-5 {\r\n  font-size: calc(1.425rem + 2.1vw);\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n}\r\n@media (min-width: 1200px) {\r\n  .display-5 {\r\n    font-size: 3rem;\r\n  }\r\n}\r\n\r\n.display-6 {\r\n  font-size: calc(1.375rem + 1.5vw);\r\n  font-weight: 300;\r\n  line-height: 1.2;\r\n}\r\n@media (min-width: 1200px) {\r\n  .display-6 {\r\n    font-size: 2.5rem;\r\n  }\r\n}\r\n\r\n.list-unstyled {\r\n  padding-left: 0;\r\n  list-style: none;\r\n}\r\n\r\n.list-inline {\r\n  padding-left: 0;\r\n  list-style: none;\r\n}\r\n\r\n.list-inline-item {\r\n  display: inline-block;\r\n}\r\n.list-inline-item:not(:last-child) {\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.initialism {\r\n  font-size: 0.875em;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.blockquote {\r\n  margin-bottom: 1rem;\r\n  font-size: 1.25rem;\r\n}\r\n.blockquote > :last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.blockquote-footer {\r\n  margin-top: -1rem;\r\n  margin-bottom: 1rem;\r\n  font-size: 0.875em;\r\n  color: #6c757d;\r\n}\r\n.blockquote-footer::before {\r\n  content: \"— \";\r\n}\r\n\r\n.has-blue-color,\r\n.has-blue-color:visited {\r\n  color: #0d6efd;\r\n}\r\n\r\n.has-blue-background-color {\r\n  background-color: #0d6efd;\r\n  border-color: #0d6efd;\r\n}\r\n\r\n.has-indigo-color,\r\n.has-indigo-color:visited {\r\n  color: #6610f2;\r\n}\r\n\r\n.has-indigo-background-color {\r\n  background-color: #6610f2;\r\n  border-color: #6610f2;\r\n}\r\n\r\n.has-purple-color,\r\n.has-purple-color:visited {\r\n  color: #6f42c1;\r\n}\r\n\r\n.has-purple-background-color {\r\n  background-color: #6f42c1;\r\n  border-color: #6f42c1;\r\n}\r\n\r\n.has-pink-color,\r\n.has-pink-color:visited {\r\n  color: #d63384;\r\n}\r\n\r\n.has-pink-background-color {\r\n  background-color: #d63384;\r\n  border-color: #d63384;\r\n}\r\n\r\n.has-red-color,\r\n.has-red-color:visited {\r\n  color: #dc3545;\r\n}\r\n\r\n.has-red-background-color {\r\n  background-color: #dc3545;\r\n  border-color: #dc3545;\r\n}\r\n\r\n.has-orange-color,\r\n.has-orange-color:visited {\r\n  color: #fd7e14;\r\n}\r\n\r\n.has-orange-background-color {\r\n  background-color: #fd7e14;\r\n  border-color: #fd7e14;\r\n}\r\n\r\n.has-yellow-color,\r\n.has-yellow-color:visited {\r\n  color: #ffc107;\r\n}\r\n\r\n.has-yellow-background-color {\r\n  background-color: #ffc107;\r\n  border-color: #ffc107;\r\n}\r\n\r\n.has-green-color,\r\n.has-green-color:visited {\r\n  color: #198754;\r\n}\r\n\r\n.has-green-background-color {\r\n  background-color: #198754;\r\n  border-color: #198754;\r\n}\r\n\r\n.has-teal-color,\r\n.has-teal-color:visited {\r\n  color: #20c997;\r\n}\r\n\r\n.has-teal-background-color {\r\n  background-color: #20c997;\r\n  border-color: #20c997;\r\n}\r\n\r\n.has-cyan-color,\r\n.has-cyan-color:visited {\r\n  color: #0dcaf0;\r\n}\r\n\r\n.has-cyan-background-color {\r\n  background-color: #0dcaf0;\r\n  border-color: #0dcaf0;\r\n}\r\n\r\n.has-white-color,\r\n.has-white-color:visited {\r\n  color: #fff;\r\n}\r\n\r\n.has-white-background-color {\r\n  background-color: #fff;\r\n  border-color: #fff;\r\n}\r\n\r\n.has-gray-color,\r\n.has-gray-color:visited {\r\n  color: #6c757d;\r\n}\r\n\r\n.has-gray-background-color {\r\n  background-color: #6c757d;\r\n  border-color: #6c757d;\r\n}\r\n\r\n.has-gray-dark-color,\r\n.has-gray-dark-color:visited {\r\n  color: #343a40;\r\n}\r\n\r\n.has-gray-dark-background-color {\r\n  background-color: #343a40;\r\n  border-color: #343a40;\r\n}\r\n\r\n.has-primary-color,\r\n.has-primary-color:visited {\r\n  color: #0d6efd;\r\n}\r\n\r\n.has-primary-background-color {\r\n  background-color: #0d6efd;\r\n  border-color: #0d6efd;\r\n}\r\n\r\n.has-secondary-color,\r\n.has-secondary-color:visited {\r\n  color: #6c757d;\r\n}\r\n\r\n.has-secondary-background-color {\r\n  background-color: #6c757d;\r\n  border-color: #6c757d;\r\n}\r\n\r\n.has-success-color,\r\n.has-success-color:visited {\r\n  color: #198754;\r\n}\r\n\r\n.has-success-background-color {\r\n  background-color: #198754;\r\n  border-color: #198754;\r\n}\r\n\r\n.has-info-color,\r\n.has-info-color:visited {\r\n  color: #0dcaf0;\r\n}\r\n\r\n.has-info-background-color {\r\n  background-color: #0dcaf0;\r\n  border-color: #0dcaf0;\r\n}\r\n\r\n.has-warning-color,\r\n.has-warning-color:visited {\r\n  color: #ffc107;\r\n}\r\n\r\n.has-warning-background-color {\r\n  background-color: #ffc107;\r\n  border-color: #ffc107;\r\n}\r\n\r\n.has-danger-color,\r\n.has-danger-color:visited {\r\n  color: #dc3545;\r\n}\r\n\r\n.has-danger-background-color {\r\n  background-color: #dc3545;\r\n  border-color: #dc3545;\r\n}\r\n\r\n.has-light-color,\r\n.has-light-color:visited {\r\n  color: #f8f9fa;\r\n}\r\n\r\n.has-light-background-color {\r\n  background-color: #f8f9fa;\r\n  border-color: #f8f9fa;\r\n}\r\n\r\n.has-dark-color,\r\n.has-dark-color:visited {\r\n  color: #212529;\r\n}\r\n\r\n.has-dark-background-color {\r\n  background-color: #212529;\r\n  border-color: #212529;\r\n}\r\n/*# sourceMappingURL=editor.css.map */","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated responsive values for font sizes, paddings, margins and much more\n//\n// Licensed under MIT (https://github.com/twbs/rfs/blob/main/LICENSE)\n\n// Configuration\n\n// Base value\n$rfs-base-value: 1.25rem !default;\n$rfs-unit: rem !default;\n\n@if $rfs-unit != rem and $rfs-unit != px {\n  @error \"`#{$rfs-unit}` is not a valid unit for $rfs-unit. Use `px` or `rem`.\";\n}\n\n// Breakpoint at where values start decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n@if $rfs-breakpoint-unit != px and $rfs-breakpoint-unit != em and $rfs-breakpoint-unit != rem {\n  @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n}\n\n// Resize values based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != number or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Mode. Possibilities: \"min-media-query\", \"max-media-query\"\n$rfs-mode: min-media-query !default;\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-rfs to false\n$enable-rfs: true !default;\n\n// Cache $rfs-base-value unit\n$rfs-base-value-unit: unit($rfs-base-value);\n\n@function divide($dividend, $divisor, $precision: 10) {\n  $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);\n  $dividend: abs($dividend);\n  $divisor: abs($divisor);\n  @if $dividend == 0 {\n    @return 0;\n  }\n  @if $divisor == 0 {\n    @error \"Cannot divide by 0\";\n  }\n  $remainder: $dividend;\n  $result: 0;\n  $factor: 10;\n  @while ($remainder > 0 and $precision >= 0) {\n    $quotient: 0;\n    @while ($remainder >= $divisor) {\n      $remainder: $remainder - $divisor;\n      $quotient: $quotient + 1;\n    }\n    $result: $result * 10 + $quotient;\n    $factor: $factor * .1;\n    $remainder: $remainder * 10;\n    $precision: $precision - 1;\n    @if ($precision < 0 and $remainder >= $divisor * 5) {\n      $result: $result + 1;\n    }\n  }\n  $result: $result * $factor * $sign;\n  $dividend-unit: unit($dividend);\n  $divisor-unit: unit($divisor);\n  $unit-map: (\n    \"px\": 1px,\n    \"rem\": 1rem,\n    \"em\": 1em,\n    \"%\": 1%\n  );\n  @if ($dividend-unit != $divisor-unit and map-has-key($unit-map, $dividend-unit)) {\n    $result: $result * map-get($unit-map, $dividend-unit);\n  }\n  @return $result;\n}\n\n// Remove px-unit from $rfs-base-value for calculations\n@if $rfs-base-value-unit == px {\n  $rfs-base-value: divide($rfs-base-value, $rfs-base-value * 0 + 1);\n}\n@else if $rfs-base-value-unit == rem {\n  $rfs-base-value: divide($rfs-base-value, divide($rfs-base-value * 0 + 1, $rfs-rem-value));\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == px {\n  $rfs-breakpoint: divide($rfs-breakpoint, $rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == rem or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: divide($rfs-breakpoint, divide($rfs-breakpoint * 0 + 1, $rfs-rem-value));\n}\n\n// Calculate the media query value\n$rfs-mq-value: if($rfs-breakpoint-unit == px, #{$rfs-breakpoint}px, #{divide($rfs-breakpoint, $rfs-rem-value)}#{$rfs-breakpoint-unit});\n$rfs-mq-property-width: if($rfs-mode == max-media-query, max-width, min-width);\n$rfs-mq-property-height: if($rfs-mode == max-media-query, max-height, min-height);\n\n// Internal mixin used to determine which media query needs to be used\n@mixin _rfs-media-query {\n  @if $rfs-two-dimensional {\n    @if $rfs-mode == max-media-query {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}), (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n    @else {\n      @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) and (#{$rfs-mq-property-height}: #{$rfs-mq-value}) {\n        @content;\n      }\n    }\n  }\n  @else {\n    @media (#{$rfs-mq-property-width}: #{$rfs-mq-value}) {\n      @content;\n    }\n  }\n}\n\n// Internal mixin that adds disable classes to the selector if needed.\n@mixin _rfs-rule {\n  @if $rfs-class == disable and $rfs-mode == max-media-query {\n    // Adding an extra class increases specificity, which prevents the media query to override the property\n    &,\n    .disable-rfs &,\n    &.disable-rfs {\n      @content;\n    }\n  }\n  @else if $rfs-class == enable and $rfs-mode == min-media-query {\n    .enable-rfs &,\n    &.enable-rfs {\n      @content;\n    }\n  }\n  @else {\n    @content;\n  }\n}\n\n// Internal mixin that adds enable classes to the selector if needed.\n@mixin _rfs-media-query-rule {\n\n  @if $rfs-class == enable {\n    @if $rfs-mode == min-media-query {\n      @content;\n    }\n\n    @include _rfs-media-query {\n      .enable-rfs &,\n      &.enable-rfs {\n        @content;\n      }\n    }\n  }\n  @else {\n    @if $rfs-class == disable and $rfs-mode == min-media-query {\n      .disable-rfs &,\n      &.disable-rfs {\n        @content;\n      }\n    }\n    @include _rfs-media-query {\n      @content;\n    }\n  }\n}\n\n// Helper function to get the formatted non-responsive value\n@function rfs-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: '';\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + ' 0';\n    }\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      @if $unit == px {\n        // Convert to rem if needed\n        $val: $val + ' ' + if($rfs-unit == rem, #{divide($value, $value * 0 + $rfs-rem-value)}rem, $value);\n      }\n      @else if $unit == rem {\n        // Convert to px if needed\n        $val: $val + ' ' + if($rfs-unit == px, #{divide($value, $value * 0 + 1) * $rfs-rem-value}px, $value);\n      }\n      @else {\n        // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n        $val: $val + ' ' + $value;\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// Helper function to get the responsive value calculated by RFS\n@function rfs-fluid-value($values) {\n  // Convert to list\n  $values: if(type-of($values) != list, ($values,), $values);\n\n  $val: '';\n\n  // Loop over each value and calculate value\n  @each $value in $values {\n    @if $value == 0 {\n      $val: $val + ' 0';\n    }\n\n    @else {\n      // Cache $value unit\n      $unit: if(type-of($value) == \"number\", unit($value), false);\n\n      // If $value isn't a number (like inherit) or $value has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n      @if not $unit or $unit != px and $unit != rem {\n        $val: $val + ' ' + $value;\n      }\n\n      @else {\n        // Remove unit from $value for calculations\n        $value: divide($value, $value * 0 + if($unit == px, 1, divide(1, $rfs-rem-value)));\n\n        // Only add the media query if the value is greater than the minimum value\n        @if abs($value) <= $rfs-base-value or not $enable-rfs {\n          $val: $val + ' ' +  if($rfs-unit == rem, #{divide($value, $rfs-rem-value)}rem, #{$value}px);\n        }\n        @else {\n          // Calculate the minimum value\n          $value-min: $rfs-base-value + divide(abs($value) - $rfs-base-value, $rfs-factor);\n\n          // Calculate difference between $value and the minimum value\n          $value-diff: abs($value) - $value-min;\n\n          // Base value formatting\n          $min-width: if($rfs-unit == rem, #{divide($value-min, $rfs-rem-value)}rem, #{$value-min}px);\n\n          // Use negative value if needed\n          $min-width: if($value < 0, -$min-width, $min-width);\n\n          // Use `vmin` if two-dimensional is enabled\n          $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n          // Calculate the variable width between 0 and $rfs-breakpoint\n          $variable-width: #{divide($value-diff * 100, $rfs-breakpoint)}#{$variable-unit};\n\n          // Return the calculated value\n          $val: $val + ' calc(' + $min-width + if($value < 0, ' - ', ' + ') + $variable-width + ')';\n        }\n      }\n    }\n  }\n\n  // Remove first space\n  @return unquote(str-slice($val, 2));\n}\n\n// RFS mixin\n@mixin rfs($values, $property: font-size) {\n  @if $values != null {\n    $val: rfs-value($values);\n    $fluidVal: rfs-fluid-value($values);\n\n    // Do not print the media query if responsive & non-responsive values are the same\n    @if $val == $fluidVal {\n      #{$property}: $val;\n    }\n    @else {\n      @include _rfs-rule {\n        #{$property}: if($rfs-mode == max-media-query, $val, $fluidVal);\n\n        // Include safari iframe resize fix if needed\n        min-width: if($rfs-safari-iframe-resize-bug-fix, (0 * 1vw), null);\n      }\n\n      @include _rfs-media-query-rule {\n        #{$property}: if($rfs-mode == max-media-query, $fluidVal, $val);\n      }\n    }\n  }\n}\n\n// Shorthand helper mixins\n@mixin font-size($value) {\n  @include rfs($value);\n}\n\n@mixin padding($value) {\n  @include rfs($value, padding);\n}\n\n@mixin padding-top($value) {\n  @include rfs($value, padding-top);\n}\n\n@mixin padding-right($value) {\n  @include rfs($value, padding-right);\n}\n\n@mixin padding-bottom($value) {\n  @include rfs($value, padding-bottom);\n}\n\n@mixin padding-left($value) {\n  @include rfs($value, padding-left);\n}\n\n@mixin margin($value) {\n  @include rfs($value, margin);\n}\n\n@mixin margin-top($value) {\n  @include rfs($value, margin-top);\n}\n\n@mixin margin-right($value) {\n  @include rfs($value, margin-right);\n}\n\n@mixin margin-bottom($value) {\n  @include rfs($value, margin-bottom);\n}\n\n@mixin margin-left($value) {\n  @include rfs($value, margin-left);\n}\n","// stylelint-disable property-disallowed-list\n// Single side border-radius\n\n// Helper function to replace negative values with 0\n@function valid-radius($radius) {\n  $return: ();\n  @each $value in $radius {\n    @if type-of($value) == number {\n      $return: append($return, max($value, 0));\n    } @else {\n      $return: append($return, $value);\n    }\n  }\n  @return $return;\n}\n\n// scss-docs-start border-radius-mixins\n@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {\n  @if $enable-rounded {\n    border-radius: valid-radius($radius);\n  }\n  @else if $fallback-border-radius != false {\n    border-radius: $fallback-border-radius;\n  }\n}\n\n@mixin border-top-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n    border-top-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-right-radius: valid-radius($radius);\n    border-bottom-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: valid-radius($radius);\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-top-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-top-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-top-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-end-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-start-radius($radius: $border-radius) {\n  @if $enable-rounded {\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n// scss-docs-end border-radius-mixins\n",":root {\n  // Note: Custom variable values only support SassScript inside `#{}`.\n\n  // Colors\n  //\n  // Generate palettes for full colors, grays, and theme colors.\n\n  @each $color, $value in $colors {\n    --#{$variable-prefix}#{$color}: #{$value};\n  }\n\n  @each $color, $value in $grays {\n    --#{$variable-prefix}gray-#{$color}: #{$value};\n  }\n\n  @each $color, $value in $theme-colors {\n    --#{$variable-prefix}#{$color}: #{$value};\n  }\n\n  @each $color, $value in $theme-colors-rgb {\n    --#{$variable-prefix}#{$color}-rgb: #{$value};\n  }\n\n  --#{$variable-prefix}white-rgb: #{to-rgb($white)};\n  --#{$variable-prefix}black-rgb: #{to-rgb($black)};\n  --#{$variable-prefix}body-color-rgb: #{to-rgb($body-color)};\n  --#{$variable-prefix}body-bg-rgb: #{to-rgb($body-bg)};\n\n  // Fonts\n\n  // Note: Use `inspect` for lists so that quoted items keep the quotes.\n  // See https://github.com/sass/sass/issues/2383#issuecomment-336349172\n  --#{$variable-prefix}font-sans-serif: #{inspect($font-family-sans-serif)};\n  --#{$variable-prefix}font-monospace: #{inspect($font-family-monospace)};\n  --#{$variable-prefix}gradient: #{$gradient};\n\n  // Root and body\n  // stylelint-disable custom-property-empty-line-before\n  // scss-docs-start root-body-variables\n  @if $font-size-root != null {\n    --#{$variable-prefix}root-font-size: #{$font-size-root};\n  }\n  --#{$variable-prefix}body-font-family: #{$font-family-base};\n  --#{$variable-prefix}body-font-size: #{$font-size-base};\n  --#{$variable-prefix}body-font-weight: #{$font-weight-base};\n  --#{$variable-prefix}body-line-height: #{$line-height-base};\n  --#{$variable-prefix}body-color: #{$body-color};\n  @if $body-text-align != null {\n    --#{$variable-prefix}body-text-align: #{$body-text-align};\n  }\n  --#{$variable-prefix}body-bg: #{$body-bg};\n  // scss-docs-end root-body-variables\n  // stylelint-enable custom-property-empty-line-before\n}\n","//\n// Basic Bootstrap table\n//\n\n.table {\n  --#{$variable-prefix}table-bg: #{$table-bg};\n  --#{$variable-prefix}table-accent-bg: #{$table-accent-bg};\n  --#{$variable-prefix}table-striped-color: #{$table-striped-color};\n  --#{$variable-prefix}table-striped-bg: #{$table-striped-bg};\n  --#{$variable-prefix}table-active-color: #{$table-active-color};\n  --#{$variable-prefix}table-active-bg: #{$table-active-bg};\n  --#{$variable-prefix}table-hover-color: #{$table-hover-color};\n  --#{$variable-prefix}table-hover-bg: #{$table-hover-bg};\n\n  width: 100%;\n  margin-bottom: $spacer;\n  color: $table-color;\n  vertical-align: $table-cell-vertical-align;\n  border-color: $table-border-color;\n\n  // Target th & td\n  // We need the child combinator to prevent styles leaking to nested tables which doesn't have a `.table` class.\n  // We use the universal selectors here to simplify the selector (else we would need 6 different selectors).\n  // Another advantage is that this generates less code and makes the selector less specific making it easier to override.\n  // stylelint-disable-next-line selector-max-universal\n  > :not(caption) > * > * {\n    padding: $table-cell-padding-y $table-cell-padding-x;\n    background-color: var(--#{$variable-prefix}table-bg);\n    border-bottom-width: $table-border-width;\n    box-shadow: inset 0 0 0 9999px var(--#{$variable-prefix}table-accent-bg);\n  }\n\n  > tbody {\n    vertical-align: inherit;\n  }\n\n  > thead {\n    vertical-align: bottom;\n  }\n\n  // Highlight border color between thead, tbody and tfoot.\n  > :not(:first-child) {\n    border-top: (2 * $table-border-width) solid $table-group-separator-color;\n  }\n}\n\n\n//\n// Change placement of captions with a class\n//\n\n.caption-top {\n  caption-side: top;\n}\n\n\n//\n// Condensed table w/ half padding\n//\n\n.table-sm {\n  // stylelint-disable-next-line selector-max-universal\n  > :not(caption) > * > * {\n    padding: $table-cell-padding-y-sm $table-cell-padding-x-sm;\n  }\n}\n\n\n// Border versions\n//\n// Add or remove borders all around the table and between all the columns.\n//\n// When borders are added on all sides of the cells, the corners can render odd when\n// these borders do not have the same color or if they are semi-transparent.\n// Therefor we add top and border bottoms to the `tr`s and left and right borders\n// to the `td`s or `th`s\n\n.table-bordered {\n  > :not(caption) > * {\n    border-width: $table-border-width 0;\n\n    // stylelint-disable-next-line selector-max-universal\n    > * {\n      border-width: 0 $table-border-width;\n    }\n  }\n}\n\n.table-borderless {\n  // stylelint-disable-next-line selector-max-universal\n  > :not(caption) > * > * {\n    border-bottom-width: 0;\n  }\n\n  > :not(:first-child) {\n    border-top-width: 0;\n  }\n}\n\n// Zebra-striping\n//\n// Default zebra-stripe styles (alternating gray and transparent backgrounds)\n\n.table-striped {\n  > tbody > tr:nth-of-type(#{$table-striped-order}) > * {\n    --#{$variable-prefix}table-accent-bg: var(--#{$variable-prefix}table-striped-bg);\n    color: var(--#{$variable-prefix}table-striped-color);\n  }\n}\n\n// Active table\n//\n// The `.table-active` class can be added to highlight rows or cells\n\n.table-active {\n  --#{$variable-prefix}table-accent-bg: var(--#{$variable-prefix}table-active-bg);\n  color: var(--#{$variable-prefix}table-active-color);\n}\n\n// Hover effect\n//\n// Placed here since it has to come after the potential zebra striping\n\n.table-hover {\n  > tbody > tr:hover > * {\n    --#{$variable-prefix}table-accent-bg: var(--#{$variable-prefix}table-hover-bg);\n    color: var(--#{$variable-prefix}table-hover-color);\n  }\n}\n\n\n// Table variants\n//\n// Table variants set the table cell backgrounds, border colors\n// and the colors of the striped, hovered & active tables\n\n@each $color, $value in $table-variants {\n  @include table-variant($color, $value);\n}\n\n// Responsive tables\n//\n// Generate series of `.table-responsive-*` classes for configuring the screen\n// size of where your table will overflow.\n\n@each $breakpoint in map-keys($grid-breakpoints) {\n  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n  @include media-breakpoint-down($breakpoint) {\n    .table-responsive#{$infix} {\n      overflow-x: auto;\n      -webkit-overflow-scrolling: touch;\n    }\n  }\n}\n","// scss-docs-start table-variant\n@mixin table-variant($state, $background) {\n  .table-#{$state} {\n    $color: color-contrast(opaque($body-bg, $background));\n    $hover-bg: mix($color, $background, percentage($table-hover-bg-factor));\n    $striped-bg: mix($color, $background, percentage($table-striped-bg-factor));\n    $active-bg: mix($color, $background, percentage($table-active-bg-factor));\n\n    --#{$variable-prefix}table-bg: #{$background};\n    --#{$variable-prefix}table-striped-bg: #{$striped-bg};\n    --#{$variable-prefix}table-striped-color: #{color-contrast($striped-bg)};\n    --#{$variable-prefix}table-active-bg: #{$active-bg};\n    --#{$variable-prefix}table-active-color: #{color-contrast($active-bg)};\n    --#{$variable-prefix}table-hover-bg: #{$hover-bg};\n    --#{$variable-prefix}table-hover-color: #{color-contrast($hover-bg)};\n\n    color: $color;\n    border-color: mix($color, $background, percentage($table-border-factor));\n  }\n}\n// scss-docs-end table-variant\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n","// Responsive images (ensure images don't scale beyond their parents)\n//\n// This is purposefully opt-in via an explicit class rather than being the default for all `<img>`s.\n// We previously tried the \"images are responsive by default\" approach in Bootstrap v2,\n// and abandoned it in Bootstrap v3 because it breaks lots of third-party widgets (including Google Maps)\n// which weren't expecting the images within themselves to be involuntarily resized.\n// See also https://github.com/twbs/bootstrap/issues/18178\n.img-fluid {\n  @include img-fluid();\n}\n\n\n// Image thumbnails\n.img-thumbnail {\n  padding: $thumbnail-padding;\n  background-color: $thumbnail-bg;\n  border: $thumbnail-border-width solid $thumbnail-border-color;\n  @include border-radius($thumbnail-border-radius);\n  @include box-shadow($thumbnail-box-shadow);\n\n  // Keep them at most 100% wide\n  @include img-fluid();\n}\n\n//\n// Figures\n//\n\n.figure {\n  // Ensures the caption's text aligns with the image.\n  display: inline-block;\n}\n\n.figure-img {\n  margin-bottom: $spacer * .5;\n  line-height: 1;\n}\n\n.figure-caption {\n  @include font-size($figure-caption-font-size);\n  color: $figure-caption-color;\n}\n","// Image Mixins\n// - Responsive image\n// - Retina image\n\n\n// Responsive image\n//\n// Keep images from scaling beyond the width of their parents.\n\n@mixin img-fluid {\n  // Part 1: Set a maximum relative to the parent\n  max-width: 100%;\n  // Part 2: Override the height to auto, otherwise images will be stretched\n  // when setting a width and height attribute on the img element.\n  height: auto;\n}\n","//\n// Headings\n//\n.h1 {\n  @extend h1;\n}\n\n.h2 {\n  @extend h2;\n}\n\n.h3 {\n  @extend h3;\n}\n\n.h4 {\n  @extend h4;\n}\n\n.h5 {\n  @extend h5;\n}\n\n.h6 {\n  @extend h6;\n}\n\n\n.lead {\n  @include font-size($lead-font-size);\n  font-weight: $lead-font-weight;\n}\n\n// Type display classes\n@each $display, $font-size in $display-font-sizes {\n  .display-#{$display} {\n    @include font-size($font-size);\n    font-weight: $display-font-weight;\n    line-height: $display-line-height;\n  }\n}\n\n//\n// Emphasis\n//\n.small {\n  @extend small;\n}\n\n.mark {\n  @extend mark;\n}\n\n//\n// Lists\n//\n\n.list-unstyled {\n  @include list-unstyled();\n}\n\n// Inline turns list items into inline-block\n.list-inline {\n  @include list-unstyled();\n}\n.list-inline-item {\n  display: inline-block;\n\n  &:not(:last-child) {\n    margin-right: $list-inline-padding;\n  }\n}\n\n\n//\n// Misc\n//\n\n// Builds on `abbr`\n.initialism {\n  @include font-size($initialism-font-size);\n  text-transform: uppercase;\n}\n\n// Blockquotes\n.blockquote {\n  margin-bottom: $blockquote-margin-y;\n  @include font-size($blockquote-font-size);\n\n  > :last-child {\n    margin-bottom: 0;\n  }\n}\n\n.blockquote-footer {\n  margin-top: -$blockquote-margin-y;\n  margin-bottom: $blockquote-margin-y;\n  @include font-size($blockquote-footer-font-size);\n  color: $blockquote-footer-color;\n\n  &::before {\n    content: \"\\2014\\00A0\"; // em dash, nbsp\n  }\n}\n","// Lists\n\n// Unstyled keeps list items block level, just removes default browser padding and list-style\n@mixin list-unstyled {\n  padding-left: 0;\n  list-style: none;\n}\n","@each $name, $color in $colors {\r\n\t.has-#{$name}-color,\r\n\t.has-#{$name}-color:visited {\r\n\t\tcolor: $color;\r\n\t}\r\n\t.has-#{$name}-background-color {\r\n\t\tbackground-color: $color;\r\n\t\tborder-color: $color;\r\n\t}\r\n}\r\n\r\n@each $name, $color in $theme-colors {\r\n\t.has-#{$name}-color,\r\n\t.has-#{$name}-color:visited {\r\n\t\tcolor: $color;\r\n\t}\r\n\t.has-#{$name}-background-color {\r\n\t\tbackground-color: $color;\r\n\t\tborder-color: $color;\r\n\t}\r\n}"]}